{"version":3,"file":"component---src-pages-index-js-eaf890f38b79bf4498cc.js","mappings":"+SAuFA,EA3EkB,kBAChB,gBAAC,EAAAA,YAAD,CACEC,MAAK,YAULC,OAAQ,SAAAC,GAAI,OACV,gBAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,WAAY,SACZ,4BAA6B,CAC3BC,cAAe,SACfD,WAAY,gBAIhB,gBAACE,EAAA,EAAD,CACEC,QAAQ,WACRL,GAAI,CACFM,WAAY,SACZC,MAAO,iBACPC,eAAgB,OAChB,UAAW,CACTA,eAAgB,cAMpBC,UAAWC,EAAAA,KACXC,GAAG,SAdL,gBAkBA,gBAACC,EAAA,EAAD,CACEC,MAAO,EACP,aAAW,OACXR,QAAQ,aACRS,eAAa,EACbd,GAAI,CACFe,MAAO,OACPb,WAAY,SACZ,uBAAwB,CACtBD,QAAS,QAEX,2BAA4B,CAC1Be,IAAK,WAIRlB,EAAKmB,OAAOC,MAAMC,KAAI,SAAAC,GAErB,OACE,gBAACC,EAAA,EAAD,CACEC,IAAKF,EAAIG,WACTC,MAAOJ,EAAIG,WACXd,UAAWC,EAAAA,KACXC,GAAE,QAAUc,IAAUL,EAAIG,YAAxB,IACFG,WAAS,GAGd,KAxDK,GAZE,E,uCCOlBC,EAAAA,QAAAA,UAAqB,CACnBC,SAAUC,IAAAA,KACVC,MAAOD,IAAAA,OAAAA,WACPhB,MAAOgB,IAAAA,OAAAA,YAGT,IAgFA,EAhFc,SAAC,GAAwB,IAAD,EAArB/B,EAAqB,EAArBA,KAAMiC,EAAe,EAAfA,SACfC,GAAY,UAAAlC,EAAKmC,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQtC,EAAKmB,OAAOoB,MAE1B,EAA0BC,EAAAA,SAAe,GAAlCzB,EAAP,UAKA,OAAqB,IAAjBuB,EAAMG,OAEN,gBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,wLAUJ,gBAAC,UAAD,CACEJ,SAAUA,EACVS,UAAW,eACXC,QAAS,YACTC,SAAU,GAEV,gBAAC,EAAD,MACA,gBAACf,EAAA,QAAD,CAAUd,MAAOA,EAAOiB,MAAO,EAAGR,IAAK,OACpCc,EAAMjB,KAAI,SAAAwB,GAAI,OACb,gBAACC,EAAA,GAAD,CACEC,MAAI,EACJC,GAAI,GACJxB,IAAKqB,EAAKI,GACV/C,GAAI,CACF,eAAgB,CAAE,SAAU,CAAEC,QAAS,WAGzC,gBAAC,IAAD,CAAMH,KAAM6C,IACZ,gBAACK,EAAA,EAAD,CACEhD,GAAI,CAAEiD,GAAI,EAAG,4BAA6B,CAAEA,GAAI,aAXvC,KAkBhBnD,EAAKmB,OAAOC,MAAMC,KAAI,SAAC+B,EAAUpB,GAAX,OACrB,gBAACH,EAAA,QAAD,CAAUd,MAAOA,EAAOiB,MAAOA,EAAQ,EAAGR,IAAK4B,EAAS3B,YACrDa,EAAMjB,KAAI,SAAAwB,GACT,OAAIA,EAAKQ,YAAYD,WAAaA,EAAS3B,WAEvC,gBAACqB,EAAA,GAAD,CACEC,MAAI,EACJC,GAAI,GACJxB,IAAKqB,EAAKI,GACV/C,GAAI,CACF,eAAgB,CAAE,SAAU,CAAEC,QAAS,WAGzC,gBAAC,IAAD,CAAMH,KAAM6C,IACZ,gBAACK,EAAA,EAAD,CACEhD,GAAI,CACFiD,GAAI,EACJ,4BAA6B,CAAEA,GAAI,cAMtC,IACR,IAxBkB,IA6B5B,C,+FC7ED,UAvBA,SAAkBG,GAChB,IAAQxB,EAAqCwB,EAArCxB,SAAUf,EAA2BuC,EAA3BvC,MAAOiB,EAAoBsB,EAApBtB,MAAUuB,GAAnC,OAA6CD,EAA7C,GAEA,OACE,qCACEE,KAAK,WACLC,OAAQ1C,IAAUiB,EAClBiB,GAAE,mBAAqBjB,EACvB,gCAA+BA,GAC3BuB,GAEHxC,IAAUiB,GACT,gBAAC,KAAD,CACE0B,WAAS,EACTxD,GAAI,CAAEgB,IAAK,OAAQ,4BAA6B,CAAEA,IAAK,YAEtDY,GAKV,C","sources":["webpack://gatsby-starter-blog/./src/components/tagsPanel.js","webpack://gatsby-starter-blog/./src/pages/index.js","webpack://gatsby-starter-blog/./src/pages/page-templates/TabPanel.js"],"sourcesContent":["import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\n\r\n// Utilities\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\n// MUI components\r\nimport Box from \"@mui/material/Box\"\r\nimport Chip from \"@mui/material/Chip\"\r\nimport Tabs from \"@mui/material/Tabs\"\r\nimport Typography from \"@mui/material/Typography\"\r\n\r\nconst tagsPanel = () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      {\r\n        allMdx {\r\n          group(field: frontmatter___tags) {\r\n            fieldValue\r\n            totalCount\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          \"@media (max-width: 600px)\": {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n          },\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"overline\"\r\n          sx={{\r\n            whiteSpace: \"nowrap\",\r\n            color: \"text.secondary\",\r\n            textDecoration: \"none\",\r\n            \"&:hover\": {\r\n              textDecoration: \"underline\",\r\n            }\r\n            // \"@media (max-width: 600px)\": {\r\n            //   display: \"none\",\r\n            // }\r\n          }}\r\n          component={Link}\r\n          to=\"/tags\"\r\n        >\r\n          Story Topics\r\n        </Typography>\r\n        <Tabs\r\n          value={0}\r\n          aria-label=\"tags\"\r\n          variant=\"scrollable\"\r\n          scrollButtons\r\n          sx={{\r\n            width: \"100%\",\r\n            alignItems: \"center\",\r\n            \"& .MuiTabs-indicator\": {\r\n              display: \"none\",\r\n            },\r\n            \"& .MuiTabs-flexContainer\": {\r\n              gap: \".5rem\",\r\n            },\r\n          }}\r\n        >\r\n          {data.allMdx.group.map(tag => {\r\n            // tags list sorted by name\r\n            return (\r\n              <Chip\r\n                key={tag.fieldValue}\r\n                label={tag.fieldValue}\r\n                component={Link}\r\n                to={`/tag/${kebabCase(tag.fieldValue)}/`}\r\n                clickable\r\n              />\r\n            )\r\n          })}\r\n        </Tabs>\r\n      </Box>\r\n    )}\r\n  ></StaticQuery>\r\n)\r\n\r\nexport default tagsPanel\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// local imports\r\nimport Post from \"../templates/post\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport Tags from \"../components/tagsPanel\"\r\nimport PageTemplate from \"./page-templates/pageTemplate\"\r\nimport TabPanel from \"./page-templates/TabPanel\"\r\n// MUI components\r\n\r\nimport Divider from \"@mui/material/Divider\"\r\nimport Grid from \"@mui/material/Grid\"\r\n\r\n\r\n\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n}\r\n\r\nconst Index = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMdx.nodes\r\n\r\n  const [value, setValue] = React.useState(0)\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Seo title=\"Portfolio\" />\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/posts\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <PageTemplate\r\n      location={location}\r\n      pageTitle={\"Jason Nguyen\"}\r\n      pageSeo={\"Portfolio\"}\r\n      tabIndex={0}\r\n    >\r\n      <Tags />\r\n      <TabPanel value={value} index={0} key={\"all\"}>\r\n        {posts.map(post => (\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            key={post.id}\r\n            sx={{\r\n              \"&:last-child\": { \"& > hr\": { display: \"none\" } },\r\n            }}\r\n          >\r\n            <Post data={post} />\r\n            <Divider\r\n              sx={{ pt: 4, \"@media (max-width: 600px)\": { pt: \"1.5rem\" } }}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </TabPanel>\r\n\r\n      {/* categories panels */}\r\n      {data.allMdx.group.map((category, index) => (\r\n        <TabPanel value={value} index={index + 1} key={category.fieldValue}>\r\n          {posts.map(post => {\r\n            if (post.frontmatter.category === category.fieldValue) {\r\n              return (\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  key={post.id}\r\n                  sx={{\r\n                    \"&:last-child\": { \"& > hr\": { display: \"none\" } },\r\n                  }}\r\n                >\r\n                  <Post data={post} />\r\n                  <Divider\r\n                    sx={{\r\n                      pt: 4,\r\n                      \"@media (max-width: 600px)\": { pt: \"1.5rem\" },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              )\r\n            }\r\n            return null; // Added to explicitly return null when no post matches the category\r\n          })}\r\n        </TabPanel>\r\n      ))}\r\n    </PageTemplate>\r\n  )\r\n}\r\n\r\nexport default Index\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }, limit: 200) {\r\n      group(field: frontmatter___category) {\r\n        fieldValue\r\n      }\r\n      nodes {\r\n        id\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        timeToRead\r\n        frontmatter {\r\n          category\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n          tags\r\n          featuredImage {\r\n            childImageSharp {\r\n              gatsbyImageData(aspectRatio: 1)\r\n            }\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport Grid from \"@mui/material/Grid\"\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Grid\r\n          container\r\n          sx={{ gap: \"2rem\", \"@media (max-width: 600px)\": { gap: \"1.5rem\" } }}\r\n        >\r\n          {children}\r\n        </Grid>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TabPanel"],"names":["StaticQuery","query","render","data","Box","sx","display","alignItems","flexDirection","Typography","variant","whiteSpace","color","textDecoration","component","Link","to","Tabs","value","scrollButtons","width","gap","allMdx","group","map","tag","Chip","key","fieldValue","label","kebabCase","clickable","TabPanel","children","PropTypes","index","location","siteTitle","site","siteMetadata","title","posts","nodes","React","length","pageTitle","pageSeo","tabIndex","post","Grid","item","xs","id","Divider","pt","category","frontmatter","props","other","role","hidden","container"],"sourceRoot":""}